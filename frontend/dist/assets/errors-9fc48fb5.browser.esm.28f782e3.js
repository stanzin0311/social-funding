var d=Object.defineProperty;var u=(s,r,e)=>r in s?d(s,r,{enumerable:!0,configurable:!0,writable:!0,value:e}):s[r]=e;var t=(s,r,e)=>(u(s,typeof r!="symbol"?r+"":r,e),e);import{E as h,d as l}from"./index.fcc556b6.js";class m extends h{constructor(r){let{chains:e=l,options:n}=r;super(),this.chains=e,this.options=n}getBlockExplorerUrls(r){var n,o;const e=(o=(n=r.explorers)==null?void 0:n.map(a=>a.url))!=null?o:[];return e.length>0?e:void 0}isChainUnsupported(r){return!this.chains.some(e=>e.chainId===r)}updateChains(r){this.chains=r}}class c extends Error{constructor(r,e){const{cause:n,code:o,data:a}=e;if(!Number.isInteger(o))throw new Error('"code" must be an integer.');if(!r||typeof r!="string")throw new Error('"message" must be a nonempty string.');super(`${r}. Cause: ${JSON.stringify(n)}`),this.cause=n,this.code=o,this.data=a}}class i extends c{constructor(r,e){const{cause:n,code:o,data:a}=e;if(!(Number.isInteger(o)&&o>=1e3&&o<=4999))throw new Error('"code" must be an integer such that: 1000 <= code <= 4999');super(r,{cause:n,code:o,data:a})}}class C extends Error{constructor(){super(...arguments);t(this,"name","AddChainError");t(this,"message","Error adding chain")}}class g extends Error{constructor(e){let{chainId:n,connectorId:o}=e;super(`Chain "${n}" not configured for connector "${o}".`);t(this,"name","ChainNotConfigured")}}class f extends Error{constructor(){super(...arguments);t(this,"name","ConnectorNotFoundError");t(this,"message","Connector not found")}}class x extends c{constructor(e){super("Resource unavailable",{cause:e,code:-32002});t(this,"name","ResourceUnavailable")}}class R extends i{constructor(e){super("Error switching chain",{cause:e,code:4902});t(this,"name","SwitchChainError")}}class w extends i{constructor(e){super("User rejected request",{cause:e,code:4001});t(this,"name","UserRejectedRequestError")}}export{C as A,g as C,x as R,R as S,w as U,m as W,f as a};
